#!/usr/bin/node

// Modules
import bcrypt from 'bcrypt'

// Imports
import '#env'
import { db, dbKill } from '#db'
import { userModel } from '#models'

// Variables de entorno
const { ADMIN_PASS, ADMIN_MAIL, ADMIN_USER } = process.env

// Función principal para la creación del usuario admin
const seedAdminUser = async () => {
  try {
    // Conectar a la base de datos
    await db()
      .then(() => console.log('Database connected'))
      .catch(err => {
        throw err
      })

    // Verificar si el usuario admin ya existe
    const adminUser = await userModel.findOne({ email: ADMIN_MAIL })

    // Si no existe, crear el usuario admin
    if (!adminUser) {
      // Generar la contraseña cifrada
      const hashedPassword = bcrypt.hash(ADMIN_PASS, 10)

      // Crear el nuevo usuario admin
      const newAdminUser = new userModel({
        name: ADMIN_USER || 'Admin',
        email: ADMIN_MAIL,
        password: hashedPassword,
        userType: 'admin',
        address: {
          street: 'Admin Street',
          city: 'Admin City',
          postalCode: '12345',
          country: 'Admin Country',
        },
      })

      // Guardar el usuario admin
      await newAdminUser.save()
      console.log('Admin user created')
    } else {
      console.log('Admin user already exists')
    }
  } catch (err) {
    // Manejo de errores
    console.error('An error has occurred: ', err.message)
  } finally {
    // Finaliza la conexión a la base de datos
    await dbKill()
    console.log('Database connection closed')
  }
}

// Ejecutar la función
seedAdminUser()
